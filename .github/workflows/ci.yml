name: CI

on:
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [main]
    paths-ignore:
      - '**.md'

# Cancel in-progress runs for the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # Disable telemetry
  DO_NOT_TRACK: "1"
  NEXT_TELEMETRY_DISABLED: "1"
  TURBO_TELEMETRY_DISABLED: "1"
  # Enable corepack for package manager consistency
  COREPACK_ENABLE_STRICT: 1

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.hash.outputs.hash }}
      node-version: ${{ steps.setup-node.outputs.node-version }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2.12.0
        with:
          disable-sudo-and-containers: true
          egress-policy: block
          allowed-endpoints: >
            github.com:443
            registry.npmjs.org:443

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Generate cache key
        id: hash
        run: |
          HASH=$(git ls-files --full-name | sort | xargs cat | shasum -a 256 | cut -d ' ' -f 1)
          echo "hash=$HASH" >> $GITHUB_OUTPUT

  lint:
    name: Lint
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.setup.outputs.node-version }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint --workspaces --if-present

  test:
    name: Test (${{ matrix.node-version }}, ${{ matrix.os }})
    needs: [setup, lint]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x, 20.x]
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2.12.0
        with:
          disable-sudo-and-containers: true
          egress-policy: block
          allowed-endpoints: >
            github.com:443
            registry.npmjs.org:443

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test --workspaces --if-present

  build:
    name: Build
    needs: [setup, test]
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2.12.0
        with:
          disable-sudo-and-containers: true
          egress-policy: block
          allowed-endpoints: >
            github.com:443
            registry.npmjs.org:443

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.setup.outputs.node-version }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: npm run build --workspaces --if-present

  integration:
    name: Integration Tests
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2.12.0
        with:
          disable-sudo-and-containers: true
          egress-policy: block
          allowed-endpoints: >
            github.com:443
            registry.npmjs.org:443

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.setup.outputs.node-version }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Run integration tests
        run: |
          # Add your integration test commands here
          echo "Running integration tests..."
          # Example: cd packages/integration-tests && npm test
